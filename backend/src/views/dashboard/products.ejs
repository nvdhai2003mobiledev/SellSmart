<%- include('../layouts/main.ejs') %>
<div class="main-content p-4">
    <!-- Header Section -->
    <div class="d-flex flex-column align-items-center mb-4">
        <div class="w-100 text-center mb-3">
            <h1 class="h1 mb-0 text-gray-800 ">Quản lý sản phẩm</h1>
        </div>
        
        <div class="w-100 d-flex justify-content-end">
            <button class="btn btn-primary d-flex align-items-center shadow-sm" data-bs-toggle="modal" data-bs-target="#addProductModal">
                <i class="fas fa-plus-circle me-2"></i>Phát hành sản phẩm
            </button>
        </div>
    </div>

    <!-- Filter Card -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form id="filterForm" class="row g-3">
                <div class="col-md-3">
                    <label for="providerFilter" class="form-label text-muted small">Nhà cung cấp</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-building text-muted"></i>
                        </span>
                        <select class="form-select border-start-0" id="providerFilter">
                            <option value="">Tất cả nhà cung cấp</option>
                            <% providers.forEach(provider => { %>
                                <option value="<%= provider._id %>"><%= provider.fullName %></option>
                            <% }); %>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="categoryFilter" class="form-label text-muted small">Danh mục</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-tags text-muted"></i>
                        </span>
                        <select class="form-select border-start-0" id="categoryFilter">
                            <option value="">Tất cả danh mục</option>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }); %>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="statusFilter" class="form-label text-muted small">Trạng thái</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-toggle-on text-muted"></i>
                        </span>
                        <select class="form-select border-start-0" id="statusFilter">
                            <option value="">Tất cả trạng thái</option>
                            <option value="available">Có sẵn</option>
                            <option value="unavailable">Hết hàng</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="searchInput" class="form-label text-muted small">Tìm kiếm</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" class="form-control border-start-0" id="searchInput" placeholder="Tìm theo tên sản phẩm...">
                    </div>
                </div>
                <div class="col-12 text-end mt-3">
                    <button type="button" class="btn btn-light me-2" id="resetFilter">
                        <i class="fas fa-undo me-2"></i>Đặt lại
                    </button>
                    <button type="button" class="btn btn-primary" id="applyFilter">
                        <i class="fas fa-filter me-2"></i>Lọc
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Products Table Card -->
    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="py-3 px-4 text-uppercase text-muted small fw-semibold">Tên sản phẩm</th>
                            <th class="py-3 px-4 text-uppercase text-muted small fw-semibold">Danh mục</th>
                            <th class="py-3 px-4 text-uppercase text-muted small fw-semibold text-center">Thuộc tính</th>
                            <th class="py-3 px-4 text-uppercase text-muted small fw-semibold text-end">Giá (VNĐ)</th>
                            <th class="py-3 px-4 text-uppercase text-muted small fw-semibold">Nhà cung cấp</th>
                            <th class="py-3 px-4 text-uppercase text-muted small fw-semibold text-center">Trạng thái</th>
                            <th class="py-3 px-4 text-uppercase text-muted small fw-semibold text-center">Tồn kho</th>
                            <th class="py-3 px-4 text-uppercase text-muted small fw-semibold text-center">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="productTableBody">
                        <% if (products && products.length > 0) { %>
                            <% products.forEach(product => { %>
                                <% if (product._id) { %>
                                    <tr id="product-row-<%= product._id %>" class="product-row" data-id="<%= product._id %>" onclick="showProductDetails('<%= product._id %>')">
                                        <td class="py-3 px-4">
                                            <div class="d-flex align-items-center">
                                                <div class="product-image me-3">
                                                    <% if (product.thumbnail) { %>
                                                        <img src="<%= product.thumbnail %>" alt="<%= product.name %>" class="rounded" width="50" height="50">
                                                    <% } else { %>
                                                        <div class="placeholder-image bg-light rounded d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                                            <i class="fas fa-image text-muted"></i>
                                                        </div>
                                                    <% } %>
                                                </div>
                                                <div>
                                                    <h6 class="mb-0"><%= product.name %></h6>
                                                    <small class="text-muted"><%= product.product_code || 'Chưa có mã' %></small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="py-3 px-4" data-category-id="<%= product.category?._id %>">
                                            <span class="badge bg-info-subtle text-info rounded-pill">
                                                <i class="fas fa-tag me-1"></i>
                                                <%= product.category?.name || 'Chưa có' %>
                                            </span>
                                        </td>
                                        <td class="py-3 px-4 text-center">
                                            <% 
                                            // Kiểm tra biến thể từ nhiều nguồn dữ liệu khác nhau
                                            const hasInventoryVariants = product.inventoryId && product.inventoryId.hasVariants && 
                                                product.inventoryId.variantDetails && product.inventoryId.variantDetails.length > 0;
                                                
                                            const hasDetailsVariants = product.detailsVariants && product.detailsVariants.length > 0;
                                            
                                            const hasVariantDetails = product.variantDetails && product.variantDetails.length > 0;
                                            
                                            const hasAnyVariants = product.hasVariants || hasInventoryVariants || hasDetailsVariants || hasVariantDetails;
                                            %>
                                            
                                            <% if (hasAnyVariants) { %>
                                                <span class="badge bg-primary rounded-pill">
                                                    <i class="fas fa-cubes me-1"></i> Các phiên bản khác 
                                                </span>
                                            <% } else { %>
                                                <span class="badge bg-secondary rounded-pill">
                                                    <i class="fas fa-cube me-1"></i>
                                                    Không có biến thể
                                                </span>
                                            <% } %>
                                        </td>
                                        <td class="py-3 px-4 text-end">
                                            <% 
                                            // Ưu tiên lấy từ detailsVariants nếu có
                                            let variants = (product.detailsVariants && product.detailsVariants.length > 0) 
                                                ? product.detailsVariants 
                                                : (product.variantDetails && product.variantDetails.length > 0) 
                                                    ? product.variantDetails 
                                                    : [];
                                            %>
                                            <% if (product.hasVariants && variants.length > 0) { %>
                                                <span class="fw-medium">
                                                    <%= new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(variants.reduce((min, v) => Math.min(min, v.price), Infinity)) %> - 
                                                    <%= new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(variants.reduce((max, v) => Math.max(max, v.price), 0)) %>
                                                </span>
                                            <% } else { %>
                                                <span class="fw-medium">
                                                    <%= new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.price || 0) %>
                                                </span>
                                            <% } %>
                                        </td>
                                        <td class="py-3 px-4" data-provider-id="<%= product.providerId?._id %>">
                                            <span class="badge bg-warning-subtle text-warning rounded-pill">
                                                <i class="fas fa-building me-1"></i>
                                                <%= product.providerId?.fullName || 'Chưa có' %>
                                            </span>
                                        </td>
                                        <td class="py-3 px-4 text-center">
                                            <% if (product.status === 'available') { %>
                                                <span class="badge bg-success rounded-pill">
                                                    <i class="fas fa-check-circle me-1"></i>Có sẵn
                                                </span>
                                            <% } else { %>
                                                <span class="badge bg-danger rounded-pill">
                                                    <i class="fas fa-times-circle me-1"></i>Hết hàng
                                                </span>
                                            <% } %>
                                        </td>
                                        <td class="py-3 px-4 text-center">
                                            <div class="d-flex align-items-center justify-content-center">
                                                <span class="fw-medium">
                                                    <%= product.inventory || 0 %>
                                                </span>
                                            </div>
                                        </td>
                                        <td class="py-3 px-4 text-center">
                                            <div class="d-flex align-items-center justify-content-center gap-2">
                                                <button type="button" class="btn btn-sm btn-outline-primary edit-product-btn" 
                                                    onclick="event.stopPropagation(); openEditProductModal('<%= product._id %>')">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% } %>
                            <% }); %>
                            
                            <% if (hiddenProducts && hiddenProducts.length > 0) { %>
                                <% hiddenProducts.forEach(product => { %>
                                    <% if (product._id) { %>
                                        <tr id="product-row-<%= product._id %>" class="product-row hidden-product" onclick="showProductDetails('<%= product._id %>')" style="display: none;">
                                            <td class="py-3 px-4">
                                                <div class="d-flex align-items-center">
                                                    <div class="product-image me-3">
                                                        <% if (product.thumbnail) { %>
                                                            <img src="<%= product.thumbnail %>" alt="<%= product.name %>" class="rounded" width="50" height="50">
                                                        <% } else { %>
                                                            <div class="placeholder-image bg-light rounded d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                                                <i class="fas fa-image text-muted"></i>
                                                            </div>
                                                        <% } %>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0"><%= product.name %></h6>
                                                        <small class="text-muted"><%= product.product_code || 'Chưa có mã' %></small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="py-3 px-4" data-category-id="<%= product.category?._id %>">
                                                <span class="badge bg-info-subtle text-info rounded-pill">
                                                    <i class="fas fa-tag me-1"></i>
                                                    <%= product.category?.name || 'Chưa có' %>
                                                </span>
                                            </td>
                                            <td class="py-3 px-4 text-center">
                                                <% 
                                                // Kiểm tra biến thể từ nhiều nguồn dữ liệu khác nhau
                                                const hasInventoryVariants = product.inventoryId && product.inventoryId.hasVariants && 
                                                    product.inventoryId.variantDetails && product.inventoryId.variantDetails.length > 0;
                                                    
                                                const hasDetailsVariants = product.detailsVariants && product.detailsVariants.length > 0;
                                                
                                                const hasVariantDetails = product.variantDetails && product.variantDetails.length > 0;
                                                
                                                const hasAnyVariants = product.hasVariants || hasInventoryVariants || hasDetailsVariants || hasVariantDetails;
                                                %>
                                                
                                                <% if (hasAnyVariants) { %>
                                                    <span class="badge bg-primary rounded-pill">
                                                        <i class="fas fa-cubes me-1"></i> Có biến thể
                                                    </span>
                                                <% } else { %>
                                                    <span class="badge bg-secondary rounded-pill">
                                                        <i class="fas fa-cube me-1"></i>
                                                        Không có biến thể
                                                    </span>
                                                <% } %>
                                            </td>
                                            <td class="py-3 px-4 text-end">
                                                <% if (product.hasVariants && product.variantDetails && product.variantDetails.length > 0) { %>
                                                    <span class="fw-medium text-danger">
                                                        <%= new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.variantDetails.reduce((min, v) => Math.min(min, v.price), Infinity)) %> - 
                                                        <%= new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.variantDetails.reduce((max, v) => Math.max(max, v.price), 0)) %>
                                                    </span>
                                                <% } else { %>
                                                    <span class="fw-medium text-danger">
                                                        <%= new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.price || 0) %>
                                                    </span>
                                                <% } %>
                                            </td>
                                            <td class="py-3 px-4" data-provider-id="<%= product.providerId?._id %>">
                                                <span class="badge bg-warning-subtle text-warning rounded-pill">
                                                    <i class="fas fa-building me-1"></i>
                                                    <%= product.providerId?.fullName || 'Chưa có' %>
                                                </span>
                                            </td>
                                            <td class="py-3 px-4 text-center">
                                                <% if (product.status === 'available') { %>
                                                    <span class="badge bg-success rounded-pill">
                                                        <i class="fas fa-check-circle me-1"></i>Có sẵn
                                                    </span>
                                                <% } else { %>
                                                    <span class="badge bg-danger rounded-pill">
                                                        <i class="fas fa-times-circle me-1"></i>Hết hàng
                                                    </span>
                                                <% } %>
                                            </td>
                                            <td class="py-3 px-4 text-center">
                                                <div class="d-flex align-items-center justify-content-center gap-2">
                                                    <span class="fw-medium">
                                                        <%= product.inventory || 0 %>
                                                    </span>
                                                    <button type="button" class="btn btn-sm btn-outline-primary edit-product-btn" 
                                                        onclick="event.stopPropagation(); openEditProductModal('<%= product._id %>')">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    <% } %>
                                <% }); %>
                            <% } %>
                        <% } else if (hiddenProducts && hiddenProducts.length > 0) { %>
                            <tr id="no-visible-products-row">
                                <td colspan="9" class="text-center py-5">
                                    <div class="d-flex flex-column align-items-center">
                                        <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                                        <h5 class="text-muted">Không có sản phẩm nào có giá và tồn kho</h5>
                                        <p class="text-muted">Bạn có <%= hiddenProducts.length %> sản phẩm cần cập nhật giá hoặc tồn kho</p>
                                    </div>
                                </td>
                            </tr>
                        <% } else { %>
                            <tr>
                                <td colspan="9" class="text-center py-5">
                                    <div class="d-flex flex-column align-items-center">
                                        <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                                        <h5 class="text-muted">Không có sản phẩm nào</h5>
                                        <p class="text-muted">Vui lòng thêm sản phẩm mới</p>
                                        <button class="btn btn-primary mt-2" data-bs-toggle="modal" data-bs-target="#addProductModal">
                                            <i class="fas fa-plus-circle me-2"></i>Phát hành sản phẩm
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center p-3 border-top">
                <div class="d-flex align-items-center">
                    <label class="text-muted me-2">Hiển thị:</label>
                    <select class="form-select form-select-sm" id="itemsPerPage" style="width: auto;">
                        <option value="5">5</option>
                        <option value="10" selected>10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                    </select>
                    <span class="text-muted ms-2">sản phẩm</span>
                </div>
                <nav aria-label="Product navigation">
                    <ul class="pagination pagination-sm mb-0">
                        <li class="page-item" id="prevPage">
                            <a class="page-link" href="#" aria-label="Previous">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">
                                <span id="currentPage">1</span> / <span id="totalPages">1</span>
                            </span>
                        </li>
                        <li class="page-item" id="nextPage">
                            <a class="page-link" href="#" aria-label="Next">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
                <div class="text-muted">
                    Tổng số: <span class="fw-semibold" id="totalItems">0</span> sản phẩm
                </div>
            </div>
        </div>
    </div>

    <!-- Modal thêm sản phẩm -->
    <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="addProductModalLabel">Phát hành sản phẩm</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addProductForm" enctype="multipart/form-data">
                        <input type="hidden" id="variantDetails" name="variantDetails">
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label for="inventoryId" class="form-label fw-bold">Chọn sản phẩm từ kho</label>
                                <select class="form-control" id="inventoryId" name="inventoryId" required>
                                    <option value="">Chọn sản phẩm từ kho</option>
                                </select>
                                <small class="text-muted">Thông tin sản phẩm sẽ được lấy từ kho hàng</small>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="name" class="form-label fw-bold">Tên sản phẩm</label>
                                <input type="text" class="form-control" id="name" name="name" placeholder="Tự động điền từ kho" readonly>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="thumbnail" class="form-label fw-bold">Chọn ảnh</label>
                                <input type="file" class="form-control" id="thumbnail" name="thumbnail" accept="image/*">
                                <img id="thumbnailPreview" src="#" alt="Xem trước ảnh" style="display: none; width: 100px; height: 100px; object-fit: cover; margin-top: 10px;">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="category" class="form-label fw-bold">Danh mục</label>
                                <input type="hidden" id="category" name="category">
                                <input type="text" class="form-control" id="categoryDisplay" placeholder="Tự động điền từ kho" readonly>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="providerId" class="form-label fw-bold">Nhà cung cấp</label>
                                <input type="hidden" id="providerId" name="providerId">
                                <input type="text" class="form-control" id="providerDisplay" placeholder="Tự động điền từ kho" readonly>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="status" class="form-label fw-bold">Trạng thái</label>
                                <input type="hidden" id="hasVariants" name="hasVariants">
                                <select class="form-control" id="status" name="status" required>
                                    <option value="available">Có sẵn</option>
                                    <option value="unavailable">Hết hàng</option>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="warrantyPeriod" class="form-label fw-bold">Thời gian bảo hành (tháng)</label>
                                <input type="number" class="form-control" id="warrantyPeriod" name="warrantyPeriod" 
                                       value="12" min="1" required>
                                <small class="text-muted">Mặc định là 12 tháng nếu không nhập</small>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label class="form-label fw-bold">Thuộc tính và giá bán</label>
                                <div id="variantTableContainer" class="table-responsive">
                                    <table class="table table-bordered table-hover">
                                        <thead class="table-light">
                                            <tr>
                                                <th>Thuộc tính</th>
                                                <th>Giá gốc</th>
                                                <th>Giá bán (VNĐ)</th>
                                                <th>Số lượng</th>
                                            </tr>
                                        </thead>
                                        <tbody id="variantTableBody">
                                            <tr>
                                                <td colspan="4" class="text-center text-muted">Chọn sản phẩm từ kho để hiển thị biến thể</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary w-100 mt-3 shadow-sm">Phát hành sản phẩm</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal chỉnh sửa sản phẩm -->
    <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProductModalLabel">Sửa thông tin sản phẩm</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm" method="POST" enctype="multipart/form-data">
                        <input type="hidden" id="edit_product_id" name="productId">
                        
                        <div class="mb-3">
                            <label for="edit_product_name" class="form-label">Tên sản phẩm</label>
                            <input type="text" class="form-control" id="edit_product_name" name="name">
                        </div>
                        
                        <div class="mb-3">
                            <label for="edit_product_image" class="form-label">Hình ảnh sản phẩm</label>
                            <div class="d-flex align-items-center mb-2">
                                <div id="edit_product_current_image" class="me-3" style="width: 80px; height: 80px; overflow: hidden;">
                                    <img src="" alt="Product Image" class="img-fluid rounded" id="edit_thumbnail_preview" style="width: 100%; height: 100%; object-fit: cover;">
                                </div>
                                <div class="flex-grow-1">
                                    <input type="file" class="form-control" id="edit_product_image" name="thumbnail" accept="image/*">
                                </div>
                            </div>
                        </div>
                        
                        <div class="mb-3" id="edit_product_variants_container">
                            <label class="form-label">Thuộc tính sản phẩm</label>
                            <div id="edit_variants_list" class="list-group mb-3"></div>
                        </div>
                        
                        <div class="mb-3" id="edit_product_price_container">
                            <label for="edit_product_price" class="form-label">Giá sản phẩm</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="edit_product_price" name="price">
                                <span class="input-group-text">VND</span>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-primary" id="saveProductChanges">Lưu thay đổi</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal hiển thị chi tiết sản phẩm -->
    <div class="modal fade" id="productDetailsModal" tabindex="-1" aria-labelledby="productDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header bg-info text-white">
                    <h5 class="modal-title" id="productDetailsModalLabel"><i class="fas fa-info-circle me-2"></i>Chi tiết sản phẩm</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="row mb-4">
                        <div class="col-md-4 text-center">
                            <div class="position-relative mb-3">
                                <img id="productImage" src="#" alt="Hình ảnh sản phẩm" class="img-fluid rounded shadow-sm border" style="width: 100%; max-height: 250px; object-fit: contain;">
                                <div id="productStatusBadge" class="position-absolute end-0 top-0 m-2"></div>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <h3 id="productName" class="fw-bold mb-3 border-bottom pb-2"></h3>
                            <div class="row g-4">
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="bg-light rounded-circle p-2 me-3 d-flex align-items-center justify-content-center" style="width: 48px; height: 48px;">
                                            <i class="fas fa-tags text-info fa-lg"></i>
                                        </div>
                                        <div>
                                            <div class="text-muted small">Danh mục</div>
                                            <div id="productCategory" class="mt-1"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="bg-light rounded-circle p-2 me-3 d-flex align-items-center justify-content-center" style="width: 48px; height: 48px;">
                                            <i class="fas fa-building text-primary fa-lg"></i>
                                        </div>
                                        <div>
                                            <div class="text-muted small">Nhà cung cấp</div>
                                            <div id="productProvider" class="mt-1"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="bg-light rounded-circle p-2 me-3 d-flex align-items-center justify-content-center" style="width: 48px; height: 48px;">
                                            <i class="fas fa-shield-alt text-warning fa-lg"></i>
                                        </div>
                                        <div>
                                            <div class="text-muted small">Bảo hành</div>
                                            <div id="productWarranty" class="mt-1"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="bg-light rounded-circle p-2 me-3 d-flex align-items-center justify-content-center" style="width: 48px; height: 48px;">
                                            <i class="fas fa-dollar-sign text-success fa-lg"></i>
                                        </div>
                                        <div>
                                            <div class="text-muted small">Giá bán</div>
                                            <div id="productPrice" class="fw-semibold text-success mt-1"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="bg-light rounded-circle p-2 me-3 d-flex align-items-center justify-content-center" style="width: 48px; height: 48px;">
                                            <i class="fas fa-boxes text-dark fa-lg"></i>
                                        </div>
                                        <div>
                                            <div class="text-muted small">Tồn kho</div>
                                            <div id="productInventory" class="fw-semibold mt-1"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="bg-light rounded-circle p-2 me-3 d-flex align-items-center justify-content-center" style="width: 48px; height: 48px;">
                                            <i class="fas fa-toggle-on text-info fa-lg"></i>
                                        </div>
                                        <div>
                                            <div class="text-muted small">Trạng thái</div>
                                            <div id="productStatus" class="mt-1"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div id="productVariantsSection" class="mt-5">
                        <h5 class="fw-bold mb-3 border-bottom pb-2">
                            <i class="fas fa-cubes me-2"></i>Thuộc tính sản phẩm
                        </h5>
                        <div class="table-responsive">
                            <table class="table table-striped table-hover border">
                                <thead class="table-light">
                                    <tr>
                                        <th class="fw-bold" style="width: 40%">Tổ hợp thuộc tính</th>
                                        <th class="fw-bold text-end" style="width: 25%">Giá bán (VNĐ)</th>
                                        <th class="fw-bold text-center" style="width: 15%">Tồn kho</th>
                                        <th class="fw-bold text-center" style="width: 20%">Trạng thái</th>
                                    </tr>
                                </thead>
                                <tbody id="productVariantsBody"></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary btn-lg" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Đóng
                    </button>
                    <button type="button" class="btn btn-warning btn-lg" id="btnEditProductDetail" style="display: none;">
                        <i class="fas fa-edit me-1"></i>Sửa sản phẩm
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast thông báo -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <strong class="me-auto">Thành công</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body"></div>
        </div>
        <div id="errorToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-danger text-white">
                <strong class="me-auto">Lỗi</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body"></div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let selectedVariantsData = [];
    let isEditMode = false;

    // Thêm biến cho phân trang
    let currentPageIndex = 1;
    let itemsPerPage = 10;
    let filteredProducts = [];
    let allProducts = [];
    
    // Tải danh sách dữ liệu cho select
    function loadData(url, selectElementId, fieldName, errorMessage) {
        $.get(url, function(response) {
            if (response.status === 'Ok') {
                const $select = $(selectElementId);
                $select.empty().append(`<option value="">Chọn ${fieldName}</option>`);
                response.data.forEach(item => {
                    $select.append(`<option value="${item._id}">${item[fieldName]}</option>`);
                });
            } else {
                showToast('error', `Lỗi khi tải ${fieldName}: ${response.message}`);
            }
        }).fail(() => showToast('error', `Lỗi khi tải ${fieldName}!`));
    }

    // Hiển thị toast
    function showToast(type, message) {
        const toastId = type === 'success' ? '#successToast' : '#errorToast';
        $(`${toastId} .toast-body`).text(message);
        new bootstrap.Toast($(toastId)).show();
    }

    // Hiển thị/ẩn trường giá và tồn kho
    function togglePriceInventoryFields(hasVariants, isEdit = false) {
        const priceFields = isEdit ? '#editPriceInventoryFields' : '#priceInventoryFields';
        $(priceFields).toggle(!hasVariants);
        $(`${priceFields} input`).prop('required', !hasVariants);
    }

    // Xem trước ảnh
    function previewImage(inputId, previewId) {
        $(inputId).change(function(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = e => $(previewId).attr('src', e.target.result).show();
                reader.readAsDataURL(file);
            }
        });
    }

    // Gửi request AJAX
    function sendAjaxRequest(url, method, formData, successMessage, modalId, callback) {
        $.ajax({
            url,
            type: method,
            data: formData,
            processData: false,
            contentType: false,
            beforeSend: () => $(`${modalId} button[type="submit"]`)
                .prop('disabled', true)
                .html('<i class="fas fa-spinner fa-spin"></i> Đang xử lý...'),
            success: response => {
                if (response.status === 'Ok') {
                    $(modalId).modal('hide');
                    showToast('success', successMessage);
                    if (callback) callback();
                } else {
                    showToast('error', response.message);
                }
            },
            error: xhr => showToast('error', `Lỗi: ${xhr.responseJSON?.message || 'Vui lòng thử lại!'}`),
            complete: () => $(`${modalId} button[type="submit"]`)
                .prop('disabled', false)
                .html(method === 'POST' ? 'Phát hành sản phẩm' : 'Lưu thay đổi')
        });
    }

    $(document).ready(function() {
        // Initialize products array
        const tableRows = document.querySelectorAll('#productTableBody tr.product-row');
        allProducts = Array.from(tableRows);
        filteredProducts = [...allProducts];
        
        // Set initial total count
        document.getElementById('totalItems').textContent = allProducts.length;
        
        // Initialize pagination
        initializePagination();
        
        // Load other data
        loadData('/providers/json', '#providerId', 'fullName', 'nhà cung cấp');
        loadData('/providers/json', '#editProviderId', 'fullName', 'nhà cung cấp');
        loadData('/typeproduct/json', '#category', 'name', 'danh mục');
        loadData('/typeproduct/json', '#editCategory', 'name', 'danh mục');
        loadInventoryItems();
        togglePriceInventoryFields(false);
        previewImage('#thumbnail', '#thumbnailPreview');
        previewImage('#editThumbnail', '#editThumbnailPreview');
        
        // Add event handlers for filter buttons
        $('#applyFilter').click(function() {
            applyFilters();
        });
        
        $('#resetFilter').click(function() {
            // Reset filter inputs
            $('#providerFilter').val('');
            $('#categoryFilter').val('');
            $('#statusFilter').val('');
            $('#searchInput').val('');
            
            // Apply the reset filters
            applyFilters();
        });
        
        console.log('Trang sản phẩm đã tải xong');
        updateProductDisplay();
    });
    
    // Hàm lọc sản phẩm
    function applyFilters() {
        const providerFilter = $('#providerFilter').val();
        const categoryFilter = $('#categoryFilter').val();
        const statusFilter = $('#statusFilter').val();
        const searchQuery = $('#searchInput').val().toLowerCase();
        
        filteredProducts = allProducts.filter(row => {
            const product = $(row);
            
            // Lọc theo nhà cung cấp
            const providerMatch = !providerFilter || product.find('td[data-provider-id]').data('provider-id') === providerFilter;
            
            // Lọc theo danh mục
            const categoryMatch = !categoryFilter || product.find('td[data-category-id]').data('category-id') === categoryFilter;
            
            // Lọc theo trạng thái
            const statusMatch = !statusFilter || 
                (statusFilter === 'available' && product.find('td:nth-child(6) .badge.bg-success').length > 0) ||
                (statusFilter === 'unavailable' && product.find('td:nth-child(6) .badge.bg-danger').length > 0);
            
            // Lọc theo tên sản phẩm
            const productName = product.find('td:first-child h6').text().toLowerCase();
            const searchMatch = !searchQuery || productName.includes(searchQuery);
            
            return providerMatch && categoryMatch && statusMatch && searchMatch;
        });
        
        // Reset to first page and update display
        currentPageIndex = 1;
        updateProductDisplay();
    }

    // Tải danh sách sản phẩm từ kho
    function loadInventoryItems() {
        $.get('/inventory/json', function(response) {
            if (response.status === 'Ok') {
                const $select = $('#inventoryId');
                $select.empty().append(`<option value="">Chọn sản phẩm từ kho</option>`);
                response.data.forEach(item => {
                    $select.append(`<option value="${item._id}">${item.product_name} (${item.product_code})</option>`);
                });
                
                // Xử lý sự kiện khi người dùng chọn sản phẩm từ kho
                $select.change(function() {
                    const selectedId = $(this).val();
                    if (selectedId) {
                        // Tìm sản phẩm đã chọn từ danh sách
                        const selectedItem = response.data.find(item => item._id === selectedId);
                        if (selectedItem) {
                            // Điền thông tin sản phẩm vào form
                            $('#name').val(selectedItem.product_name);
                            $('#category').val(selectedItem.typeProduct_id?._id || selectedItem.typeProduct_id);
                            $('#categoryDisplay').val(selectedItem.typeProduct_id?.name || 'Chưa có');
                            $('#providerId').val(selectedItem.provider_id?._id || selectedItem.provider_id);
                            $('#providerDisplay').val(selectedItem.provider_id?.fullName || 'Chưa có');
                            $('#hasVariants').val(selectedItem.hasVariants);
                            
                            // Xử lý biến thể
                            if (selectedItem.hasVariants && selectedItem.variantDetails && selectedItem.variantDetails.length > 0) {
                                let variantHTML = '';
                                selectedItem.variantDetails.forEach((variant, index) => {
                                    let attributes = variant.attributes;
                                    let attributeStr = '';
                                    
                                    if (attributes instanceof Map) {
                                        for (const [key, value] of attributes.entries()) {
                                            attributeStr += `${key}: ${value}, `;
                                        }
                                    } else if (typeof attributes === 'object' && attributes !== null) {
                                        for (const key in attributes) {
                                            attributeStr += `${key}: ${attributes[key]}, `;
                                        }
                                    }
                                    
                                    attributeStr = attributeStr.slice(0, -2); // Remove trailing comma and space
                                    
                                    variantHTML += `
                                        <tr>
                                            <td>${attributeStr}</td>
                                            <td>${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(variant.price)}</td>
                                            <td>
                                                <input type="number" class="form-control variant-price" 
                                                       data-variant-index="${index}" 
                                                       min="${Number(variant.price).toFixed(2)}" 
                                                       value="${Number(variant.price).toFixed(2)}" 
                                                       step="0.01"
                                                       required>
                                            </td>
                                            <td>
                                                <input type="number" class="form-control variant-quantity" 
                                                       data-variant-index="${index}" 
                                                       min="1" 
                                                       value="${variant.quantity}" 
                                                       required>
                                            </td>
                                        </tr>
                                    `;
                                });
                                
                                $('#variantTableBody').html(variantHTML);
                                
                                // Lưu thông tin biến thể vào input hidden
                                $('#variantDetails').val(JSON.stringify(selectedItem.variantDetails));
                            } else {
                                // Sản phẩm không có biến thể
                                const price = selectedItem.total_price / (selectedItem.total_quantity || 1);
                                const quantity = selectedItem.total_quantity || 0;
                                
                                $('#variantTableBody').html(`
                                    <tr>
                                        <td>Không có biến thể</td>
                                        <td>${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(price)}</td>
                                        <td>
                                            <input type="number" class="form-control variant-price" 
                                                   data-variant-index="0" 
                                                   min="${Number(price).toFixed(2)}" 
                                                   value="${Number(price).toFixed(2)}" 
                                                   step="0.01"
                                                   required>
                                        </td>
                                        <td>
                                            <input type="number" class="form-control variant-quantity" 
                                                   data-variant-index="0" 
                                                   min="1" 
                                                   value="${quantity}" 
                                                   required>
                                        </td>
                                    </tr>
                                `);
                                
                                $('#variantDetails').val(JSON.stringify([{
                                    attributes: {},
                                    price: price,
                                    quantity: quantity
                                }]));
                            }
                        }
                    } else {
                        // Reset form nếu không chọn sản phẩm
                        $('#name').val('');
                        $('#categoryDisplay').val('');
                        $('#category').val('');
                        $('#providerDisplay').val('');
                        $('#providerId').val('');
                        $('#hasVariants').val('');
                        $('#originalPriceDisplay').val('');
                        $('#original_price').val('');
                        $('#variantTableBody').html('<tr><td colspan="4" class="text-center text-muted">Chọn sản phẩm từ kho để hiển thị biến thể</td></tr>');
                        $('#variantDetails').val('[]');
                    }
                });
            }
        });
    }

    // Xử lý khi submit form
    $('#addProductForm').submit(function(e) {
        e.preventDefault();
        // Lấy thông tin biến thể từ bảng
        const variantDetails = [];
        $('.variant-price').each(function() {
            const index = $(this).data('variant-index');
            const price = parseFloat($(this).val());
            const quantity = parseInt($(`.variant-quantity[data-variant-index="${index}"]`).val());
            // Lấy thông tin biến thể gốc
            const originalVariants = $('#variantDetails').val() ? JSON.parse($('#variantDetails').val()) : [];
            const originalVariant = originalVariants[index] || {};
            variantDetails.push({
                attributes: originalVariant.attributes || {},
                price: price, // Giá bán nhập từ form
                inventory: quantity // Số lượng nhập từ form
            });
        });
        // Cập nhật giá trị variantDetails
        $('#variantDetails').val(JSON.stringify(variantDetails));
        // Tạo FormData và gửi request
        const formData = new FormData(this);
        sendAjaxRequest(
            '/products/create',
            'POST',
            formData,
            'Phát hành sản phẩm thành công',
            '#addProductModal',
            function() {
                $('#addProductModal').modal('hide');
                setTimeout(() => location.reload(), 1000);
            }
        );
    });

    // Mở trang biến thể
    function openVariantsPage(editMode = false) {
        isEditMode = editMode;
        const modalId = editMode ? '#editProductModal' : '#addProductModal';
        $(modalId).modal('hide');
        const typeProductId = editMode ? $('#editCategory').val() : $('#category').val();
        if (!typeProductId) {
            showToast('error', 'Vui lòng chọn danh mục trước khi chọn biến thể!');
            $(modalId).modal('show');
            return;
        }
        const url = `/products/variants?typeProductId=${typeProductId}`;
        console.log('Mở trang biến thể với URL:', url);
        const width = Math.min(1200, window.screen.width * 0.9);
        const height = Math.min(800, window.screen.height * 0.9);
        const left = (window.screen.width - width) / 2;
        const top = (window.screen.height - height) / 2;
        window.open(url, 'VariantsWindow', `width=${width},height=${height},left=${left},top=${top}`);
    }

    // Hiển thị chi tiết sản phẩm
    function showProductDetails(productId) {
        if (!productId || !/^[0-9a-fA-F]{24}$/.test(productId)) {
            showToast('error', 'ID sản phẩm không hợp lệ!');
            return;
        }
        
        $.ajax({
            url: `/products/${productId}`,
            type: 'GET',
            success: function(response) {
                if (response.status === 'Ok') {
                    const product = response.data;
                    console.log('Chi tiết sản phẩm nhận được:', product);
                    
                    // Cập nhật thông tin cơ bản
                    $('#productImage').attr('src', product.thumbnail || 'https://via.placeholder.com/100');
                    $('#productName').text(product.name || 'N/A');
                    
                    // Hiển thị danh mục
                    $('#productCategory').html(`
                        <span class="badge bg-info-subtle text-info px-3 py-2 rounded-pill">
                            <i class="fas fa-tag me-1"></i>${product.category?.name || 'Chưa có'}
                        </span>
                    `);
                    
                    // Hiển thị nhà cung cấp
                    $('#productProvider').html(`
                        <span class="badge bg-primary bg-opacity-10 text-primary px-3 py-2 rounded-pill">
                            <i class="fas fa-industry me-1"></i>${product.providerId?.fullName || 'Chưa có'}
                        </span>
                    `);
                    
                    // Cập nhật thông tin bảo hành
                    const warrantyPeriod = product.warrantyPeriod || 12;
                    $('#productWarranty').html(`
                        <span class="badge bg-warning bg-opacity-10 text-warning px-3 py-2 rounded-pill">
                            <i class="fas fa-shield-alt me-1"></i>${warrantyPeriod} tháng
                        </span>
                    `);
                    
                    // Cập nhật trạng thái
                    const isAvailable = product.status === 'available';
                    const statusClass = isAvailable ? 'success' : 'danger';
                    const statusIcon = isAvailable ? 'check-circle' : 'times-circle';
                    const statusText = isAvailable ? 'Có sẵn' : 'Hết hàng';
                    
                    // Badge nhỏ trên ảnh sản phẩm
                    $('#productStatusBadge').html(`
                        <span class="badge bg-${statusClass} rounded-pill shadow-sm">
                            <i class="fas fa-${statusIcon} me-1"></i>${statusText}
                        </span>
                    `);
                    
                    // Badge lớn trong phần thông tin
                    $('#productStatus').html(`
                        <span class="badge bg-${statusClass}-subtle text-${statusClass} px-3 py-2 rounded-pill">
                            <i class="fas fa-${statusIcon} me-1"></i>${statusText}
                        </span>
                    `);
                    
                    // Hiển thị giá và tồn kho
                    if (product.hasVariants) {
                        console.log('Sản phẩm có biến thể:', product.hasVariants);
                        
                        // Xác định nguồn dữ liệu biến thể (có thể từ detailsVariants hoặc variantDetails)
                        let variantsList = [];
                        
                        if (product.detailsVariants && product.detailsVariants.length > 0) {
                            console.log('Sử dụng dữ liệu từ detailsVariants:', product.detailsVariants);
                            variantsList = product.detailsVariants;
                        } else if (product.variantDetails && product.variantDetails.length > 0) {
                            console.log('Sử dụng dữ liệu từ variantDetails:', product.variantDetails);
                            variantsList = product.variantDetails;
                        } else if (product.inventoryId && product.inventoryId.variantDetails) {
                            console.log('Sử dụng dữ liệu từ inventoryId.variantDetails:', product.inventoryId.variantDetails);
                            variantsList = product.inventoryId.variantDetails;
                        }
                        
                        // Tính giá từ biến thể
                        const prices = variantsList
                            .map(v => v.price || (v.attributes ? v.price : 0))
                            .filter(p => p !== undefined && p > 0);
                        
                        console.log('Danh sách giá biến thể:', prices);
                        
                        if (prices.length > 0) {
                            const minPrice = Math.min(...prices);
                            const maxPrice = Math.max(...prices);
                            
                            if (minPrice === maxPrice) {
                                $('#productPrice').html(`
                                    <span class="badge bg-success-subtle text-success px-3 py-2 rounded-pill">
                                        <i class="fas fa-tag me-1"></i>${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(minPrice)}
                                    </span>
                                `);
                            } else {
                                $('#productPrice').html(`
                                    <div class="d-flex align-items-center">
                                        <span class="badge bg-success-subtle text-success px-3 py-2 rounded-pill">
                                            <i class="fas fa-tag me-1"></i>${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(minPrice)}
                                        </span>
                                        <i class="fas fa-arrow-right mx-2 text-muted"></i>
                                        <span class="badge bg-danger-subtle text-danger px-3 py-2 rounded-pill">
                                            <i class="fas fa-tag me-1"></i>${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(maxPrice)}
                                        </span>
                                    </div>
                                `);
                            }
                        } else {
                            $('#productPrice').html(`
                                <span class="badge bg-secondary-subtle text-secondary px-3 py-2 rounded-pill">
                                    <i class="fas fa-tag me-1"></i>0 VNĐ
                                </span>
                            `);
                        }
                        
                        // Tính tồn kho từ biến thể
                        const inventories = variantsList
                            .map(v => v.inventory || v.quantity || 0)
                            .filter(i => i !== undefined);
                        
                        console.log('Danh sách tồn kho biến thể:', inventories);
                        
                        const totalInventory = inventories.length > 0 ? inventories.reduce((sum, curr) => sum + curr, 0) : 0;
                        
                        $('#productInventory').html(`
                            <span class="badge bg-dark-subtle text-dark px-3 py-2 rounded-pill">
                                <i class="fas fa-boxes me-1"></i>${totalInventory} <small class="text-muted">(tổng ${inventories.length} biến thể)</small>
                            </span>
                        `);
                        
                        // Hiển thị bảng biến thể
                        $('#productVariantsSection').show();
                        $('#productVariantsBody').empty();
                        
                        console.log('Hiển thị bảng biến thể với dữ liệu:', variantsList);
                        
                        variantsList.forEach((variant, index) => {
                            console.log(`Xử lý biến thể #${index}:`, variant);
                            
                            // Xử lý hiển thị thuộc tính biến thể
                            let variantDetails = '';
                            
                            if (variant.variantDetails && Array.isArray(variant.variantDetails)) {
                                // Trường hợp variantDetails là mảng các đối tượng {variantId, value}
                                variantDetails = variant.variantDetails.map(detail => {
                                    const variantName = detail.variantId?.name || '';
                                    const variantValue = detail.value || '';
                                    return `<strong>${variantName}:</strong> ${variantValue}`;
                                }).filter(detail => detail.trim() !== '<strong>:</strong> ' && detail.trim() !== '').join(', ');
                            } else if (variant.attributes) {
                                // Trường hợp attributes là Map hoặc Object
                                let attributes = variant.attributes;
                                
                                // Chuyển đổi Map thành Object nếu cần
                                if (typeof attributes.get === 'function') {
                                    attributes = Object.fromEntries(attributes);
                                } else if (typeof attributes === 'string') {
                                    try {
                                        attributes = JSON.parse(attributes);
                                    } catch (e) {
                                        console.error('Không thể parse attributes:', e);
                                    }
                                }
                                
                                // Tạo chuỗi hiển thị từ attributes
                                if (typeof attributes === 'object' && attributes !== null) {
                                    // Hiển thị tên thuộc tính thay vì ID
                                    variantDetails = Object.entries(attributes)
                                        .map(([key, value]) => {
                                            // Chuyển đổi key từ ID sang tên thuộc tính nếu có thể
                                            let displayKey = key;
                                            
                                            // Xử lý trường hợp key là ID MongoDB (24 ký tự hex)
                                            if (/^[0-9a-fA-F]{24}$/.test(key)) {
                                                // Sử dụng tên thuộc tính phổ biến dựa vào giá trị
                                                if (value.toLowerCase().includes('inch')) {
                                                    displayKey = 'Kích thước';
                                                } else if (['đỏ', 'xanh', 'vàng', 'đen', 'trắng', 'tím', 'hồng'].some(color => value.toLowerCase().includes(color))) {
                                                    displayKey = 'Màu sắc';
                                                } else if (['gb', 'tb', 'mb'].some(unit => value.toLowerCase().includes(unit))) {
                                                    displayKey = 'Bộ nhớ';
                                                } else if (['ram'].some(term => value.toLowerCase().includes(term))) {
                                                    displayKey = 'RAM';
                                                } else {
                                                    displayKey = 'Thuộc tính';
                                                }
                                            }
                                            
                                            return `<strong>${displayKey}:</strong> ${value}`;
                                        })
                                        .join(', ');
                                } else {
                                    console.warn('Không thể xử lý attributes:', attributes);
                                }
                            }
                            
                            // Lấy giá và số lượng
                            const price = variant.price || 0;
                            const quantity = variant.inventory || variant.quantity || 0;
                            const hasInventory = quantity > 0;
                            
                            // Trạng thái tồn kho
                            const inventoryStatus = hasInventory
                                ? `<span class="badge bg-success-subtle text-success px-2 py-1 rounded-pill">
                                    <i class="fas fa-check-circle me-1"></i>Còn hàng
                                  </span>`
                                : `<span class="badge bg-danger-subtle text-danger px-2 py-1 rounded-pill">
                                    <i class="fas fa-times-circle me-1"></i>Hết hàng
                                  </span>`;
                            
                            // Chỉ hiển thị biến thể nếu có thông tin hợp lệ
                            if (variantDetails) {
                                const row = `
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-cube text-primary me-2"></i>
                                                ${variantDetails}
                                            </div>
                                        </td>
                                        <td class="text-end fw-semibold text-success">${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(price)}</td>
                                        <td class="text-center fw-semibold">${quantity}</td>
                                        <td class="text-center">${inventoryStatus}</td>
                                    </tr>
                                `;
                                
                                $('#productVariantsBody').append(row);
                            }
                        });
                        
                        if ($('#productVariantsBody').children().length === 0) {
                            $('#productVariantsBody').html(`
                                <tr>
                                    <td colspan="4" class="text-center text-muted py-4">
                                        <i class="fas fa-info-circle fa-2x mb-2 d-block"></i>
                                        Không có dữ liệu biến thể
                                    </td>
                                </tr>
                            `);
                        }
                    } else {
                        // Hiển thị giá và tồn kho cơ bản
                        const price = product.price || 0;
                        $('#productPrice').html(`
                            <span class="badge bg-success-subtle text-success px-3 py-2 rounded-pill">
                                <i class="fas fa-tag me-1"></i>${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(price)}
                            </span>
                        `);
                        
                        const inventory = product.inventory || 0;
                        $('#productInventory').html(`
                            <span class="badge bg-dark-subtle text-dark px-3 py-2 rounded-pill">
                                <i class="fas fa-boxes me-1"></i>${inventory}
                            </span>
                        `);
                        
                        // Ẩn phần biến thể
                        $('#productVariantsSection').hide();
                    }
                    
                    // Xử lý nút sửa sản phẩm
                    $('#btnEditProductDetail').off('click').on('click', function() {
                        $('#productDetailsModal').modal('hide');
                        editProduct(productId);
                    });
                    
                    // Hiển thị modal
                    $('#productDetailsModal').modal('show');
                } else {
                    showToast('error', `Lỗi khi lấy chi tiết sản phẩm: ${response.message}`);
                }
            },
            error: function(xhr) {
                showToast('error', `Lỗi khi lấy chi tiết sản phẩm: ${xhr.responseJSON?.message || 'Vui lòng thử lại!'}`);
            }
        });
    }

    // Sửa sản phẩm
    function editProduct(id) {
        if (!id || !/^[0-9a-fA-F]{24}$/.test(id)) {
            showToast('error', 'ID sản phẩm không hợp lệ!');
            return;
        }
        console.log('Gọi sửa sản phẩm với ID:', id);
        $.get(`/products/${id}`, function(response) {
            if (response.status === 'Ok') {
                const product = response.data;
                $('#editProductId').val(product._id);
                $('#editName').val(product.name);
                $('#editThumbnailPreview').attr('src', product.thumbnail || 'https://via.placeholder.com/100').show();
                $('#editCategory').val(product.category?._id || '');
                $('#editProviderId').val(product.providerId?._id || '');
                $('#editStatus').val(product.status);

                selectedVariantsData = product.hasVariants && product.detailsVariants?.length > 0
                    ? product.detailsVariants.map(variant => ({
                        variantDetails: variant.variantDetails.map(d => ({ variantId: d.variantId._id, value: d.value })),
                        price: variant.price,
                        inventory: variant.inventory
                    }))
                    : [];
                if (selectedVariantsData.length > 0) {
                    const displayText = selectedVariantsData.map(v => v.variantDetails.map(d => d.value).join(', ')).join('; ');
                    $('#editSelectedVariantDisplay').text(`Đã chọn: ${displayText}`).show();
                    $('#editVariantDetails').val(JSON.stringify(selectedVariantsData));
                    togglePriceInventoryFields(true, true);
                } else {
                    $('#editSelectedVariantDisplay').hide();
                    $('#editPrice').val(product.price || '');
                    $('#editInventory').val(product.inventory || '');
                    togglePriceInventoryFields(false, true);
                }
                $('#editProductModal').modal('show');
            } else {
                showToast('error', `Lỗi khi lấy thông tin sản phẩm: ${response.message}`);
            }
        }).fail(() => showToast('error', 'Lỗi khi lấy thông tin sản phẩm!'));
    }

    $('#editProductForm').submit(function(event) {
        event.preventDefault();
        const hasVariants = selectedVariantsData.length > 0;
        if (!hasVariants && (!$('#editPrice').val() || !$('#editInventory').val())) {
            showToast('error', 'Vui lòng nhập giá và tồn kho khi không có biến thể!');
            return;
        }

        const formData = new FormData(this);
        formData.append('variantDetails', JSON.stringify(selectedVariantsData));
        console.log('Gửi yêu cầu cập nhật sản phẩm:', Object.fromEntries(formData.entries()));
        sendAjaxRequest(`/products/update/${$('#editProductId').val()}`, 'PUT', formData, 'Cập nhật sản phẩm thành công!', '#editProductModal', () => setTimeout(() => location.reload(), 1500));
    });

    // Nhận dữ liệu biến thể từ variants.ejs
    window.addEventListener('message', function(event) {
        if (event.data.selectedVariants && Array.isArray(event.data.selectedVariants)) {
            console.log('Nhận dữ liệu biến thể từ variants:', event.data.selectedVariants);
            
            // Chuẩn hóa dữ liệu từ trang variants.ejs
            let variants = event.data.selectedVariants;
            
            // Kiểm tra và lọc ra các tổ hợp biến thể hợp lệ
            variants = variants.filter(combination => 
                Array.isArray(combination) && combination.length > 0 && 
                combination.every(v => v.variantId && v.value)
            );
            
            if (variants.length === 0) {
                showToast('error', 'Không có biến thể hợp lệ được chọn!');
                $(isEditMode ? '#editProductModal' : '#addProductModal').modal('show');
                return;
            }

            // Render form nhập giá và tồn kho cho từng tổ hợp biến thể
            $('#variantPriceRows').empty();
            variants.forEach((combination, index) => {
                // Lấy tên hiển thị cho tổ hợp: kết hợp các giá trị biến thể
                const variantText = combination.map(v => v.value).join(', ');
                
                $('#variantPriceRows').append(`
                    <div class="mb-3 p-3 border rounded">
                        <h6 class="fw-bold mb-2">Tổ hợp #${index + 1}: ${variantText}</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label">Giá bán (VNĐ)</label>
                                <input type="number" class="form-control" name="price-${index}" placeholder="Giá bán (VNĐ)" min="0" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Tồn kho</label>
                                <input type="number" class="form-control" name="inventory-${index}" placeholder="Tồn kho" min="0" required>
                            </div>
                        </div>
                    </div>`);
            });

            // Xử lý khi submit form giá và tồn kho
            $('#variantPriceForm').off('submit').on('submit', function(e) {
                e.preventDefault();
                const prices = $('[name^="price-"]').map((i, el) => Number(el.value)).get();
                const inventories = $('[name^="inventory-"]').map((i, el) => Number(el.value)).get();
                
                if (prices.some(p => p < 0 || isNaN(p)) || inventories.some(i => i < 0 || isNaN(i))) {
                    showToast('error', 'Giá và tồn kho phải là số không âm!');
                    return;
                }

                // Tạo dữ liệu cho các tổ hợp biến thể
                selectedVariantsData = variants.map((combination, index) => ({
                    variantDetails: combination,
                    price: prices[index],
                    inventory: inventories[index]
                }));
                
                // Tạo text hiển thị cho các tổ hợp đã chọn
                const displayText = selectedVariantsData.map((variant, index) => 
                    `Tổ hợp #${index + 1}: ${variant.variantDetails.map(d => d.value).join(', ')} - ${variant.price.toLocaleString()} VNĐ`
                ).join('<br>');
                
                const target = isEditMode ? '#editSelectedVariantDisplay' : '#selectedVariantDisplay';
                const hiddenInput = isEditMode ? '#editVariantDetails' : '#variantDetails';
                
                $(target).html(`<div class="alert alert-info">Đã chọn:<br>${displayText}</div>`).show();
                $(hiddenInput).val(JSON.stringify(selectedVariantsData));
                togglePriceInventoryFields(true, isEditMode);
                $('#variantPriceModal').modal('hide');
                $(isEditMode ? '#editProductModal' : '#addProductModal').modal('show');
            });
            
            $('#variantPriceModal').modal('show');
        }
    });

    // Initialize pagination controls
    function initializePagination() {
        // Handle items per page change
        document.getElementById('itemsPerPage').addEventListener('change', function() {
            itemsPerPage = parseInt(this.value);
            currentPageIndex = 1; // Reset to first page
            updateProductDisplay();
        });
        
        // Handle previous page click
        document.getElementById('prevPage').addEventListener('click', function(e) {
            e.preventDefault();
            if (currentPageIndex > 1) {
                currentPageIndex--;
                updateProductDisplay();
            }
        });
        
        // Handle next page click
        document.getElementById('nextPage').addEventListener('click', function(e) {
            e.preventDefault();
            const totalPages = Math.ceil(filteredProducts.length / itemsPerPage);
            if (currentPageIndex < totalPages) {
                currentPageIndex++;
                updateProductDisplay();
            }
        });
    }
    
    // Update pagination after filtering
    function updatePaginationAfterFiltering() {
        // Update filtered products array based on visibility
        filteredProducts = Array.from(document.querySelectorAll('#productTableBody tr.product-row'))
            .filter(row => {
                // Check if row matches current filters
                const categoryVal = $('#filterCategory').val();
                const providerVal = $('#filterProvider').val();
                const nameVal = $('#filterName').val().toLowerCase();
                
                const categoryMatch = !categoryVal || $(row).data('category-id') === categoryVal;
                const providerMatch = !providerVal || $(row).data('provider-id') === providerVal;
                const nameMatch = !nameVal || $(row).find('td:nth-child(2)').text().toLowerCase().includes(nameVal);
                
                const isVisible = categoryMatch && providerMatch && nameMatch;
                
                // Update class based on visibility
                if (isVisible) {
                    $(row).removeClass('filtered-out');
                } else {
                    $(row).addClass('filtered-out');
                }
                
                return isVisible;
            });
        
        // Reset to first page when filter changes
        currentPageIndex = 1;
        
        // Update the display
        updateProductDisplay();
    }
    
    // Function to update product display based on pagination
    function updateProductDisplay() {
        // Get all product rows
        const rows = document.querySelectorAll('#productTableBody tr.product-row');
        
        // Hide all rows first
        rows.forEach(row => {
            row.style.display = 'none';
        });

        // Calculate pagination values
        const totalPages = Math.ceil(filteredProducts.length / itemsPerPage);
        const start = (currentPageIndex - 1) * itemsPerPage;
        const end = Math.min(start + itemsPerPage, filteredProducts.length);
        
        // Show only the rows for the current page
        for (let i = start; i < end; i++) {
            if (filteredProducts[i]) {
                filteredProducts[i].style.display = '';
            }
        }
        
        // Check if no products are visible
        if ($('.product-row:visible').length === 0) {
            $('#no-products-row').show();
        } else {
            $('#no-products-row').hide();
        }
        
        // Update pagination UI
        $('#currentPage').text(currentPageIndex);
        $('#totalPages').text(totalPages);
        
        // Enable/disable pagination buttons
        $('#prevPage').toggleClass('disabled', currentPageIndex <= 1);
        $('#nextPage').toggleClass('disabled', currentPageIndex >= totalPages);
        
        // Update total count
        $('#totalItems').text(filteredProducts.length);
        
        // Cập nhật số lượng sản phẩm hiển thị
        updateProductCount();
    }
    
    // Hàm cập nhật số lượng sản phẩm hiển thị
    function updateProductCount() {
        const visibleProducts = $('.product-row:visible').length;
        const totalProducts = $('.product-row').length;
        $('.product-count').text(`Hiển thị ${visibleProducts} / ${totalProducts} sản phẩm`);
    }
    
    // Khởi tạo số lượng sản phẩm hiển thị
    updateProductCount();

    // Xử lý mở modal chỉnh sửa sản phẩm
    function openEditProductModal(productId) {
        // Tìm sản phẩm từ danh sách đã lọc
        const productElement = document.querySelector(`#product-row-${productId}`);
        if (!productElement) return;
        
        // Reset form
        document.getElementById('editProductForm').reset();
        document.getElementById('edit_variants_list').innerHTML = '';
        
        // Gán ID sản phẩm
        document.getElementById('edit_product_id').value = productId;
        
        // Lấy thông tin sản phẩm từ server
        fetch(`/products/${productId}`)
            .then(response => response.json())
            .then(response => {
                if (response.status !== 'Ok' || !response.data) {
                    console.error('Lỗi khi lấy thông tin sản phẩm:', response);
                    return;
                }
                
                const product = response.data;
                console.log('Thông tin sản phẩm:', product);
                
                // Hiển thị thông tin sản phẩm
                document.getElementById('edit_product_name').value = product.name || '';
                
                // Hiển thị hình ảnh hiện tại
                const thumbnailPreview = document.getElementById('edit_thumbnail_preview');
                if (product.thumbnail) {
                    thumbnailPreview.src = product.thumbnail;
                    thumbnailPreview.style.display = 'block';
                } else {
                    thumbnailPreview.style.display = 'none';
                }
                
                // Xử lý hiển thị giá theo biến thể hoặc giá đơn
                const hasVariants = product.hasVariants || 
                                   (product.detailsVariants && product.detailsVariants.length > 0) || 
                                   (product.variantDetails && product.variantDetails.length > 0);
                
                if (hasVariants) {
                    // Hiển thị container biến thể và ẩn container giá đơn
                    document.getElementById('edit_product_variants_container').style.display = 'block';
                    document.getElementById('edit_product_price_container').style.display = 'none';
                    
                    // Lấy danh sách biến thể
                    let variants = [];
                    if (product.detailsVariants && product.detailsVariants.length > 0) {
                        console.log('Sử dụng detailsVariants:', product.detailsVariants);
                        variants = product.detailsVariants;
                    } else if (product.variantDetails && product.variantDetails.length > 0) {
                        console.log('Sử dụng variantDetails:', product.variantDetails);
                        variants = product.variantDetails;
                    } else if (product.inventoryId && product.inventoryId.variantDetails) {
                        console.log('Sử dụng inventoryId.variantDetails:', product.inventoryId.variantDetails);
                        variants = product.inventoryId.variantDetails;
                    }
                    
                    // Hiển thị danh sách biến thể
                    const variantsListElement = document.getElementById('edit_variants_list');
                    variantsListElement.innerHTML = '';
                    
                    if (variants.length === 0) {
                        variantsListElement.innerHTML = `<div class="alert alert-info">Không tìm thấy thông tin biến thể cho sản phẩm này.</div>`;
                    } else {
                        variants.forEach((variant, index) => {
                            // Xác định thuộc tính biến thể để hiển thị
                            let variantName = `Biến thể ${index + 1}`;
                            let variantAttributes = '';
                            
                            // Xử lý các định dạng khác nhau của thuộc tính
                            if (variant.variantDetails && Array.isArray(variant.variantDetails)) {
                                // Trường hợp variantDetails là mảng các đối tượng {variantId, value}
                                variantAttributes = variant.variantDetails.map(detail => {
                                    const variantName = detail.variantId?.name || '';
                                    const variantValue = detail.value || '';
                                    return `<strong>${variantName}:</strong> ${variantValue}`;
                                }).filter(detail => detail.trim() !== '<strong>:</strong> ' && detail.trim() !== '').join(', ');
                            } else if (variant.attributes) {
                                // Trường hợp attributes là Map hoặc Object
                                let attributes = variant.attributes;
                                
                                // Chuyển đổi Map thành Object nếu cần
                                if (typeof attributes.get === 'function') {
                                    attributes = Object.fromEntries(attributes);
                                } else if (typeof attributes === 'string') {
                                    try {
                                        attributes = JSON.parse(attributes);
                                    } catch (e) {
                                        console.error('Không thể parse attributes:', e);
                                    }
                                }
                                
                                // Tạo chuỗi hiển thị từ attributes
                                if (typeof attributes === 'object' && attributes !== null) {
                                    // Hiển thị tên thuộc tính thay vì ID
                                    variantAttributes = Object.entries(attributes)
                                        .map(([key, value]) => {
                                            // Chuyển đổi key từ ID sang tên thuộc tính nếu có thể
                                            let displayKey = key;
                                            
                                            // Xử lý trường hợp key là ID MongoDB (24 ký tự hex)
                                            if (/^[0-9a-fA-F]{24}$/.test(key)) {
                                                // Sử dụng tên thuộc tính phổ biến dựa vào giá trị
                                                if (value.toLowerCase().includes('inch')) {
                                                    displayKey = 'Kích thước';
                                                } else if (['đỏ', 'xanh', 'vàng', 'đen', 'trắng', 'tím', 'hồng'].some(color => value.toLowerCase().includes(color))) {
                                                    displayKey = 'Màu sắc';
                                                } else if (['gb', 'tb', 'mb'].some(unit => value.toLowerCase().includes(unit))) {
                                                    displayKey = 'Bộ nhớ';
                                                } else if (['ram'].some(term => value.toLowerCase().includes(term))) {
                                                    displayKey = 'RAM';
                                                } else {
                                                    displayKey = 'Thuộc tính';
                                                }
                                            }
                                            
                                            return `<strong>${displayKey}:</strong> ${value}`;
                                        })
                                        .join(', ');
                                } else {
                                    variantAttributes = 'Không có thông tin thuộc tính';
                                }
                            }
                            
                            // Lấy giá và số lượng
                            const price = variant.price || 0;
                            const variantId = variant._id || index;
                            
                            const variantElement = document.createElement('div');
                            variantElement.className = 'list-group-item';
                            variantElement.innerHTML = `
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-0 text-primary"><i class="fas fa-cube me-2"></i>Loại: ${variantName}</h6>
                                        <div class="text-muted small mt-1">${variantAttributes}</div>
                                    </div>
                                    <div class="input-group" style="width: 200px;">
                                        <input type="number" class="form-control variant-price" 
                                               data-variant-id="${variantId}" 
                                               value="${price}">
                                        <span class="input-group-text">VND</span>
                                    </div>
                                </div>
                            `;
                            variantsListElement.appendChild(variantElement);
                        });
                    }
                } else {
                    // Hiển thị container giá đơn và ẩn container biến thể
                    document.getElementById('edit_product_variants_container').style.display = 'none';
                    document.getElementById('edit_product_price_container').style.display = 'block';
                    
                    // Gán giá sản phẩm
                    document.getElementById('edit_product_price').value = product.price || 0;
                }
                
                // Hiển thị modal
                const modal = new bootstrap.Modal(document.getElementById('editProductModal'));
                modal.show();
            })
            .catch(error => {
                console.error('Error fetching product details:', error);
                alert('Không thể lấy thông tin sản phẩm. Vui lòng thử lại sau.');
            });
    }
    
    // Xử lý khi thay đổi hình ảnh
    document.getElementById('edit_product_image').addEventListener('change', function(e) {
        if (this.files && this.files[0]) {
            const reader = new FileReader();
            reader.onload = function(e) {
                document.getElementById('edit_thumbnail_preview').src = e.target.result;
                document.getElementById('edit_thumbnail_preview').style.display = 'block';
            }
            reader.readAsDataURL(this.files[0]);
        }
    });
    
    // Xử lý lưu thay đổi
    document.getElementById('saveProductChanges').addEventListener('click', function() {
        const productId = document.getElementById('edit_product_id').value;
        const formData = new FormData(document.getElementById('editProductForm'));
        
        // Xử lý giá biến thể
        const variantPriceInputs = document.querySelectorAll('.variant-price');
        const variantPrices = [];
        
        variantPriceInputs.forEach(input => {
            variantPrices.push({
                id: input.getAttribute('data-variant-id'),
                price: input.value
            });
        });
        
        formData.append('variantPrices', JSON.stringify(variantPrices));
        
        // Gửi request cập nhật sản phẩm
        fetch(`/products/${productId}/update`, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(result => {
            if (result.success) {
                // Đóng modal
                bootstrap.Modal.getInstance(document.getElementById('editProductModal')).hide();
                
                // Thông báo thành công
                alert('Cập nhật sản phẩm thành công!');
                
                // Reload trang để cập nhật dữ liệu
                window.location.reload();
            } else {
                alert(result.message || 'Có lỗi xảy ra khi cập nhật sản phẩm!');
            }
        })
        .catch(error => {
            console.error('Error updating product:', error);
            alert('Có lỗi xảy ra khi cập nhật sản phẩm. Vui lòng thử lại sau.');
        });
    });

    // Tính lợi nhuận khi thay đổi giá bán
    $('#price').on('input', function() {
        const sellingPrice = parseFloat($(this).val()) || 0;
        const originalPrice = parseFloat($('#original_price').val()) || 0;
        
        if (originalPrice > 0 && sellingPrice > 0) {
            const profit = sellingPrice - originalPrice;
            const profitPercent = (profit / originalPrice) * 100;
            
            let profitText = '';
            let profitClass = 'text-success';
            
            if (profit > 0) {
                profitText = `+${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(profit)} (${profitPercent.toFixed(2)}%)`;
                profitClass = 'text-success';
            } else if (profit < 0) {
                profitText = `${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(profit)} (${profitPercent.toFixed(2)}%)`;
                profitClass = 'text-danger';
            } else {
                profitText = '0 đ (0%)';
                profitClass = 'text-muted';
            }
            
            $('#profitDisplay').val(profitText).removeClass('text-success text-danger text-muted').addClass(profitClass);
        } else {
            $('#profitDisplay').val('Chưa đủ thông tin').removeClass('text-success text-danger').addClass('text-muted');
        }
    });
</script>

<style>
.form-control:focus, .form-select:focus {
    border-color: #86b7fe;
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.1);
}

.input-group-text {
    border-right: none;
}

.input-group .form-control:focus + .input-group-text,
.input-group .form-select:focus + .input-group-text {
    border-color: #86b7fe;
}

.btn {
    padding: 0.5rem 1rem;
    font-weight: 500;
}

.breadcrumb-item + .breadcrumb-item::before {
    content: "›";
}

.card {
    border: none;
    border-radius: 10px;
}

.product-row {
    cursor: pointer;
    transition: all 0.2s ease;
}

.product-row:hover {
    background-color: rgba(0, 0, 0, 0.02);
    transform: translateY(-1px);
}

.badge {
    font-weight: 500;
    padding: 0.5em 0.75em;
}

.table > :not(caption) > * > * {
    padding: 1rem;
}

.pagination .page-link {
    border-radius: 4px;
    margin: 0 2px;
}

.pagination .page-link:focus {
    box-shadow: none;
}

.table thead th {
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.75rem;
    letter-spacing: 0.5px;
}

.bg-success-subtle {
    background-color: rgba(25, 135, 84, 0.1) !important;
}

.bg-danger-subtle {
    background-color: rgba(220, 53, 69, 0.1) !important;
}

.bg-warning-subtle {
    background-color: rgba(255, 193, 7, 0.1) !important;
}

.bg-info-subtle {
    background-color: rgba(13, 202, 240, 0.1) !important;
}
</style>